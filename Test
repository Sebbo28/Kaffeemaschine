/*
  Button

  Turns on and off a light emitting diode(LED) connected to digital pin 13,
  when pressing a pushbutton attached to pin 2.

  The circuit:
  - LED attached from pin 13 to ground
  - pushbutton attached to pin 2 from +5V
  - 10K resistor attached to pin 2 from ground

  - Note: on most Arduinos there is already an LED on the board
    attached to pin 13.

  created 2005
  by DojoDave <http://www.0j0.org>
  modified 30 Aug 2011
  by Tom Igoe

  This example code is in the public domain.

  http://www.arduino.cc/en/Tutorial/Button
*/

// constants won't change. They're used here to set pin numbers:
const int buttonPin1 = 10;     // the number of the pushbutton pin
const int buttonPin2 = 11;     // the number of the pushbutton pin
const int buttonPin3 = 12;     // the number of the pushbutton pin
const int ledPin =  13;      // the number of the LED pin
const int counter = 0;       // Zähler für Anzahl der Button Drückungen
bool lastbuttonState

// variables will change:
int buttonState = 0;         // variable for reading the pushbutton status

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  Serial.begin(115200);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 10);
  // Display static text
  display.println("Hello, world!");
  display.display(); 
  
  // initialize the LED pin as an output:
  pinMode(ledPin, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin1, INPUT);
}



void loop() {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin1);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  //
 // if(counter==0)
 /*{
  counter == counter +1;
 }*/
 
 
    if (buttonState == HIGH) {
      if(counter0)
      
      // turn LED on:
      digitalWrite(ledPin, HIGH);
      display.println("Taste gedrückt - Licht an");
      display.display(); 
    
      
    } else {
      // turn LED off:
      digitalWrite(ledPin, LOW);
      display.println("Taste nicht gedrückt - Licht aus");
      display.display(); 
    }
  }
}
